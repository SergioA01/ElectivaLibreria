package com.example.training.controllers;

import com.example.training.services.AuthorService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.GetMapping;
import org.springframework.beans.factory.annotation.RestController;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

@RestController
@RequestMapping("books")
public class BookController {
    @Autowired
    private BookService bookService;

    @Autowired
    private AuthorService authorService;

    @GetMapping()
    public ResponseEntity<Object> findAll(){

        try {

            List<Book> result = bookService.findAll();

            return ResponseHandler.generateResponse("Success",HttpStatus.OK,result);

        }catch (Exception e){
            return ResponseHandler.generateResponse(e.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR, null );
        }
    }

    @PostMapping("/{id}")
    public ResponseEntity<Object> save(@RequestBody Book book, @PathVariable Integer id ){
        try {
            Author author = authorService.findById(id);

            if(author != null){

                Book result = BookService.save(book, author);

                return ResponseHandler.generateResponse("Success", httpStatus.CREATED, book);
            }

            return  ResponseHandler.generateResponse("Success",HttpStatus.NOT_FOUND);

        }catch (Exception e){
            return  ResponseHandler.generateResponse(e.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR, null );
        }
    }

    @DeleteMapping("/{id}")
    public ResponseEntity<Object> getBooks(@PathVariable Integer id ){
        try {
            Book book = bookService.findById(id);

            if(book != null){

                bookService.delete(book);

                return ResponseHandler.generateResponse("Success", httpStatus.ACCEPTED, author);
            }

            return  ResponseHandler.generateResponse("Success Author",HttpStatus.NOT_FOUND, null);

        }catch (Exception e){
            return  ResponseHandler.generateResponse(e.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR, null );
        }
    }

}